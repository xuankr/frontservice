# 多环境配置文件激活属性
spring.profiles.active=dev
#服务端口
server.port=${server.port}
#数据源配置
datasource.druid.type=com.alibaba.druid.pool.DruidDataSource
datasource.druid.driver-class-name=com.mysql.jdbc.Driver
datasource.druid.url=${datasource.druid.url}
datasource.druid.username=${datasource.druid.username}
datasource.druid.password=${datasource.druid.password}
datasource.druid.initialSize=10
datasource.druid.minIdle=5
datasource.druid.maxActive=20
datasource.druid.maxWait=60000
datasource.druid.timeBetweenEvictionRunsMillis=60000
datasource.druid.minEvictableIdleTimeMillis=300000
datasource.druid.validationQuery=SELECT 1 FROM DUAL
datasource.druid.testWhileIdle=true
datasource.druid.testOnBorrow=false
datasource.druid.testOnReturn=false
datasource.druid.poolPreparedStatements=true
datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
datasource.druid.filters=stat,wall,log4j
# mybatis ���������
mybatis.mapper-locations=classpath:mapper/**/*.xml
mybatis.type-aliases-package=com.front.entity
mybatis.check-config-location=true
mybatis.config-location=classpath:mybatis.xml

#serssion 超时时间
server.session.timeout=30
#默认页面 【本项目作为后端服务，所以直接就是跳转到swagger api处】
server.display-name=/front/swagger-ui.html
#项目web包名
#server.servlet.path=/front
spring.mvc.servlet.load-on-startup=1
#spring mvc ��һЩ����
#spring mvc 后缀
spring.mvc.view.suffix=.html
#spring mvc 访问目录
spring.mvc.view.prefix=/web/html/
#spring 浏览器 网站小图标
spring.mvc.favicon.enabled=false
#http ��������
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
#日志配置
logging.config=classpath:logback-spring.xml
mapper.identity=MYSQL
mapper.not-empty=false
#pagehelper [mybatis 分页插件]
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql
#权限框架设置
#Application specific
authentication.oauth.clientid=rajithapp
authentication.oauth.secret=secret
authentication.oauth.tokenValidityInSeconds=1800
security.oauth2.resource.filter-order=3
# 在网上搜索之后，我们发现session store type使用来存放session的存储方式，目前Spring boot中只支持redis方式。 由于本应用暂无需将session放入redis的需求，故这里就可以将session store type设置为none.
spring.session.store-type=none
# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=1
# Redis服务器地址
spring.redis.host=172.19.20.251
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0